version: '3'

networks:
  app-tier:
    driver: bridge

services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9094:9094'
    networks:
      - app-tier
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes

  api:
    build: ./api/
    networks:
      - app-tier
    depends_on:
      - kafka
    restart: on-failure
    ports:
      - '8000:8000'


  microservice-dc:
    build: ./ms1/
    networks:
      - app-tier
    depends_on:
      - kafka
    restart: on-failure
    env_file:
      - ./ms1/.env

  microservice-da:
    build: ./ms2/
    networks:
      - app-tier
    depends_on:
      - kafka
    restart: on-failure
    env_file:
      - ./ms2/.env

  # # db-collection:
  # #   image: postgres:latest
  # #   networks:
  # #     - app-tier
  # #   environment:
  # #     POSTGRES_USER: user
  # #     POSTGRES_PASSWORD: password
  # #     POSTGRES_DB: collection

  # # db-analysis:
  # #   image: postgres:latest
  # #   networks:
  # #     - app-tier
  # #   environment:
  # #     POSTGRES_USER: user
  # #     POSTGRES_PASSWORD: password
  # #     POSTGRES_DB: analysis