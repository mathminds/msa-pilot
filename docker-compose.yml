# version: '3'

networks:
  micrservices-network:
    driver: bridge

  internal-api-network:
    driver: bridge
  external-api-network:
    driver: bridge

  ms1-db_network:
    driver: bridge
  ms2-db_network:
    driver: bridge
  ms3-db_network:
    driver: bridge

volumes:
  ms1data:
  ms2data:
  ms3data:

services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9094:9094'
    networks:
      - micrservices-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1

  api:
    build: ./api/
    networks:
      - internal-api-network
    ports:
      - '8000:8000'
    volumes:
      - ./api/data:/app/data


  ms1:
    build: ./ms1/
    networks:
      - micrservices-network
      - ms1-db_network
      - internal-api-network
    ports:
      - '8001:8000'
    depends_on:
      - kafka
    env_file:
      - ./ms1/.env


  ms2:
    build: ./ms2/
    networks:
      - micrservices-network
      - ms2-db_network
    depends_on:
      - kafka
    env_file:
      - ./ms2/.env

  ms3:
    build: ./ms3/
    networks:
      - micrservices-network
      - ms3-db_network
      - external-api-network
    depends_on:
      - kafka
    env_file:
      - ./ms3/.env
    ports:
      - '8003:8000'

  frontend:
    build: ./front/
    env_file:
      - ./front/.env
    ports:
      - '3000:3000'
    networks:
      - external-api-network

  ms1-db:
    image: postgres:latest
    networks:
      - ms1-db_network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ms1
    volumes:
      - ms1data:/var/lib/postgresql/data

  ms1-db-admin:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    environment:
      PGADMIN_DEFAULT_EMAIL: chris.lee@mydata.org
      PGADMIN_DEFAULT_PASSWORD: aaaa1111
    volumes:
      - ms1data:/var/lib/pgadmin
    networks:
      - ms1-db_network

  ms2-db:
    image: postgres:latest
    networks:
      - ms2-db_network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ms2
    volumes:
      - ms2data:/var/lib/postgresql/data
    
  ms2-db-admin:
    image: adminer
    restart: always
    ports:
      - 8082:8080
    environment:
      PGADMIN_DEFAULT_EMAIL: chris.lee@mydata.org
      PGADMIN_DEFAULT_PASSWORD: aaaa1111
    volumes:
      - ms2data:/var/lib/pgadmin
    networks:
      - ms2-db_network

  ms3-db:
    image: postgres:latest
    networks:
      - ms3-db_network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ms3
    volumes:
      - ms3data:/var/lib/postgresql/data

  ms3-db-admin:
    image: adminer
    restart: always
    ports:
      - 8083:8080
    environment:
      PGADMIN_DEFAULT_EMAIL: chris.lee@mydata.org
      PGADMIN_DEFAULT_PASSWORD: aaaa1111
    volumes:
      - ms3data:/var/lib/pgadmin
    networks:
      - ms3-db_network


